trigger:
- none

pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  solution: '**/RoundTheCode.AzureTestProject.sln'
  project: '**/RoundTheCode.AzureTestProject.csproj'

steps:
- task: NuGetToolInstaller@1
  name: 'NuGetToolInstaller'
  displayName: 'NuGet tool installer'

- task: NuGetCommand@2
  name: 'NuGetRestore'
  displayName: 'NuGet restore packages'
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  name: 'Tests'
  displayName: 'Run tests'
  inputs:
    command: 'test'
    projects: '$(solution)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  name: 'Publish'
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(project)'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  name: 'PublishBuildArtifacts'
  displayName: 'Publish build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'AzureTestProject'
    publishLocation: 'Container'

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'AzureTestProject'
    downloadPath: '$(System.DefaultWorkingDirectory)'

- task: IISWebAppDeploymentOnMachineGroup@0
  displayName: 'Deploy IIS Web App'
  inputs:
    WebSiteName: 'Default Web Site'  # 웹 사이트 이름
    Package: '$(Build.ArtifactStagingDirectory)/AzureTestProject.zip'  # 배포할 패키지 경로
    RemoveAdditionalFiles: false
    TakeAppOfflineFlag: true
    AdditionalArguments: '-setParam:name="IIS Web Application Name",value="Default Web Site"'
    # 선택 사항: Application Pool 지정 (기본적으로 DefaultAppPool이 사용됨)
    AppPool: 'DefaultAppPool'  # 필요시 Application Pool 설정
